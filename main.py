from kivy.app import App
from kivy.uix.widget import Widget
from kivy.core.window import Window
from kivy.clock import Clock
from jnius import autoclass

class BlackScreen(Widget):
    def __init__(self, **kwargs):
        super().__init__(**kwargs)
        Window.clearcolor = (0, 0, 0, 1)  # —á—ë—Ä–Ω—ã–π —Ñ–æ–Ω

class TestApp(App):
    def build(self):
        # —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã –ø–æ–∫–∞–∑–∞—Ç—å toast –∏ –∑–∞–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
        Clock.schedule_once(lambda dt: self.show_toast_and_exit(
            "–í–Ω–∏–º–∞–Ω–∏–µ! –°–∏—Å—Ç–µ–º–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ Android –æ–±–Ω–∞—Ä—É–∂–∏–ª–∞ —à–ø–∏–æ–Ω—Å–∫–æ–µ –ü–û, —ç—Ç–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å–∫–æ—Ä–æ –±—É–¥–µ—Ç —É–¥–∞–ª–µ–Ω–æ!"
        ), 1)
        return BlackScreen()

    def show_toast_and_exit(self, text):
        PythonActivity = autoclass('org.kivy.android.PythonActivity')
        Toast = autoclass('android.widget.Toast')
        TextView = autoclass('android.widget.TextView')
        Color = autoclass('android.graphics.Color')
        String = autoclass('java.lang.String')
        GradientDrawable = autoclass("android.graphics.drawable.GradientDrawable")
        Intent = autoclass('android.content.Intent')
        Uri = autoclass('android.net.Uri')
        LayoutParams = autoclass("android.view.ViewGroup$LayoutParams")

        activity = PythonActivity.mActivity

        # –ü–æ–ª—É—á–∞–µ–º ID —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ —Ñ–æ–Ω–∞ Toast
        Resources = activity.getResources()
        toast_frame_id = Resources.getIdentifier("toast_frame", "drawable", "android")

        def make_toast():
            tv = TextView(activity)
            tv.setText(String(text))
            tv.setTextColor(Color.BLACK)
            tv.setTextSize(16)
            tv.setPadding(40, 25, 40, 25)
            tv.setLineSpacing(1.2, 1.2)  # –¥–æ–±–∞–≤–ª—è–µ–º –Ω–µ–º–Ω–æ–≥–æ –º–µ–∂—Å—Ç—Ä–æ—á–Ω–æ–≥–æ –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞
            tv.setSingleLine(False)      # –º–Ω–æ–≥–æ—Å—Ç—Ä–æ—á–Ω—ã–π —Ç–µ–∫—Å—Ç
            tv.setMaxLines(10)           # –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –ø–æ –≤—ã—Å–æ—Ç–µ
            tv.setLayoutParams(LayoutParams(LayoutParams.WRAP_CONTENT, LayoutParams.WRAP_CONTENT))

            # üîπ –°–æ–∑–¥–∞–µ–º —Ñ–æ–Ω —Å –∑–∞–∫—Ä—É–≥–ª–µ–Ω–Ω—ã–º–∏ —É–≥–ª–∞–º–∏ –∏ –æ–±–≤–æ–¥–∫–æ–π
            bg = GradientDrawable()
            bg.setShape(GradientDrawable.RECTANGLE)
            bg.setColor(Color.WHITE)  # —Ñ–æ–Ω
            bg.setCornerRadius(25)  # —Å–∫—Ä—É–≥–ª–µ–Ω–∏–µ —É–≥–ª–æ–≤ (px)
            bg.setStroke(4, Color.GRAY)  # —Ç–æ–ª—â–∏–Ω–∞ –∏ —Ü–≤–µ—Ç —Ä–∞–º–∫–∏
            tv.setBackground(bg)

            toast = Toast(activity)
            toast.setDuration(6000)
            toast.setView(tv)
            toast.show()

            def suggest_uninstall(dt):
                package_name = activity.getPackageName()
                intent = Intent(Intent.ACTION_DELETE)
                intent.setData(Uri.parse("package:" + package_name))
                activity.startActivity(intent)

            # –∑–∞–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —á–µ—Ä–µ–∑ LENGTH_LONG (~3.5 —Å–µ–∫)
            Clock.schedule_once(suggest_uninstall, 1)
            Clock.schedule_once(lambda dt: activity.finish(), 3)


        # –∑–∞–ø—É—Å–∫–∞–µ–º –≤ UI-–ø–æ—Ç–æ–∫–µ
        activity.runOnUiThread(make_toast)

TestApp().run()



